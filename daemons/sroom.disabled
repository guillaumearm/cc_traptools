local EXPECTED_PASSWORD = {'white', 'orange', 'magenta', 'lightBlue'}
local SECRET_DOOR_OUTPUT_COLOR = colors.white;

local TIMEOUT = 10
local AUTOCLOSE_ENABLED = true;
local AUTOCLOSE_TIMEOUT = 5;

local UNIQ_COLORS = {}
for _, v in pairs(EXPECTED_PASSWORD) do
  UNIQ_COLORS[v] = v;
end

local function noop()
end

local el = eventloop.create();
local rsc = rsclient.create(el);

local statePassword = {};
local disposeTimeout = noop;

local function buttonPressed(colorname)
  return function(enabled)
    if not enabled then
      return
    end

    local cursor = #statePassword + 1;

    local function resetStatePassword()
      statePassword = {};
      disposeTimeout();
      disposeTimeout = noop;
    end

    if colorname == EXPECTED_PASSWORD[cursor] then
      table.insert(statePassword, colorname);
      print("'" .. colorname .. "' pressed")
      disposeTimeout();
      disposeTimeout = el.setTimeout(function()
        print("password timeout for '" .. colorname .. "'")
        statePassword = {}
      end, TIMEOUT)
    else
      print('invalid password')
      resetStatePassword()
    end

    if cursor == #EXPECTED_PASSWORD then
      rsc.writeOutput(SECRET_DOOR_OUTPUT_COLOR, true);

      if AUTOCLOSE_ENABLED then
        el.setTimeout(function()
          rsc.writeOutput(SECRET_DOOR_OUTPUT_COLOR, false);
        end, AUTOCLOSE_TIMEOUT)
      end

      resetStatePassword();
      print('password ok')
    end
  end
end

local function listenColor(colorname)
  colorname = colorname or '';
  if not colors[colorname] then
    error("sroom error: invalid color '" .. colorname .. "'")
  end

  rsc.listenInput(colorname, buttonPressed(colorname))
end

for _, colorname in pairs(UNIQ_COLORS) do
  listenColor(colorname)
end

print('=> secret door enabled')
el.startLoop();
print('=> secret door disabled')
