local EXPECTED_PASSWORD = {'white', 'orange', 'magenta', 'lightBlue'};
local SECRET_DOOR_OUTPUT_COLOR = 'white';

local BUTTON_PRESS_TIMEOUT = 10;
local AUTOCLOSE_ENABLED = true;
local AUTOCLOSE_TIMEOUT = 60;

local UNIQ_COLORS = {};
for _, colorname in pairs(EXPECTED_PASSWORD) do
  if not colorutils.isValidColorName(colorname) then
    error("sdoors error: invalid colorname '" .. colorname .. "' in EXPECTED_PASSWORD");
  end
  UNIQ_COLORS[colorname] = colorname;
end

if not colorutils.isValidColorName(SECRET_DOOR_OUTPUT_COLOR) then
  error("sdoors error: invalid colorname '" .. SECRET_DOOR_OUTPUT_COLOR .. "' for SECRET_DOOR_OUTPUT_COLOR");
end

local function noop()
end

local el = eventloop.create();
local rsc = rsclient.create(el);
local chat = chatbox.create(el);

local statePassword = {};
local disposeTimeout = noop;

local function buttonPressed(colorname)
  return function(enabled)
    if not enabled then
      return;
    end

    local cursor = #statePassword + 1;

    local function resetStatePassword()
      statePassword = {};
      disposeTimeout();
      disposeTimeout = noop;
    end

    if colorname == EXPECTED_PASSWORD[cursor] then
      table.insert(statePassword, colorname);
      print("'" .. colorname .. "' pressed");
      disposeTimeout();
      disposeTimeout = el.setTimeout(function()
        print("password timeout for '" .. colorname .. "'");
        statePassword = {};
      end, BUTTON_PRESS_TIMEOUT);
    else
      print('invalid password');
      resetStatePassword();
    end

    if cursor == #EXPECTED_PASSWORD then
      rsc.writeOutput(colors[SECRET_DOOR_OUTPUT_COLOR], true);

      if AUTOCLOSE_ENABLED then
        el.setTimeout(function()
          print('autoclose timeout: close the door');
          rsc.writeOutput(colors[SECRET_DOOR_OUTPUT_COLOR], false);
        end, AUTOCLOSE_TIMEOUT);
      end

      resetStatePassword();
      print('password ok: open the door!');
    end
  end
end

local function listenColor(colorname)
  colorname = colorname or '';
  if not colors[colorname] then
    error("sdoors error: invalid color '" .. colorname .. "'");
  end

  rsc.listenInput(colorname, buttonPressed(colorname));
end

for _, colorname in pairs(UNIQ_COLORS) do
  listenColor(colorname);
end

rsc.listenOutput(SECRET_DOOR_OUTPUT_COLOR, function(enabled)
  local text, color;

  if enabled then
    text = 'secret door opened!';
    color = "gold";
  else
    text = "secret door closed!";
    color = "red";
  end

  chat.sendFormattedMessage({
    text = text,
    color = color
  });
end)

print('=> secret door enabled');
el.startLoop();
print('=> secret door disabled');
